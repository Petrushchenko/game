{"version":3,"sources":["components/Field.js","components/Arrows.js","components/Labyrinth.js","App.js","serviceWorker.js","index.js"],"names":["Field","props","cells","markerPosition","onClick","endPosition","clickedCell","react_default","a","createElement","className","map","cell","index","cn","correct","incorrect","key","Arrows","arrows","positions","arrow","Object","defineProperty","arrow-down","length","direction","arrow-left","arrow-up","arrow-right","concat","Labyrinth","state","gameRange","clicked","setMarkerPosition","_this","setState","prevState","objectSpread","Math","floor","random","pow","handleClick","position","moveArrow","start","range","counter","res","arguments","undefined","currentPosition","directions","firstColumnIndexes","includes","lastColumnIndexes","getDirection","push","prevProps","_this2","this","toConsumableArray","_this$state","Array","fill","components_Field","assign","components_Arrows","Component","from","v","i","filter","item","ar","App","components_Labyrinth","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.555708cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nconst Field = (props) => {\r\n\tconst {cells, markerPosition, onClick, endPosition, clickedCell} = props;\r\n\r\n\treturn (\r\n\t\t<div className=\"field\">\r\n\t\t\t{cells.map((cell, index) => (\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName={cn(\"cell\", {\"correct\": index === endPosition, \"incorrect\" : clickedCell === index && clickedCell !== endPosition})} \r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\tonClick={() => onClick(index)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{markerPosition === index && <div className=\"marker\"></div>}\r\n\t\t\t\t</div>))\r\n\t\t\t}\r\n\t\t\t\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default Field;","import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nconst Arrows = (props) => {\r\n\tconst { arrows, positions} = props;\r\n\r\n\treturn (\r\n\t\t<div className=\"arrows\">\r\n\t\t\t{arrows.map((arrow, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tclassName={cn(\"arrow\", {\r\n\t\t\t\t\t\t\t\"arrow-down\" : positions.length && positions[index].direction === \"down\",\r\n\t\t\t\t\t\t\t\"arrow-left\" : positions.length && positions[index].direction === \"left\",\r\n\t\t\t\t\t\t\t\"arrow-up\" : positions.length && positions[index].direction === \"up\",\r\n\t\t\t\t\t\t\t\"arrow-right\" : positions.length && positions[index].direction === \"right\",\r\n\t\t\t\t\t\t\t[`arrow-${index }`] : true\r\n\t\t\t\t\t\t\t})} \r\n\t\t\t\t\t\tkey={index}></div>)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Arrows;","import React, {Component} from 'react';\r\nimport Field from './Field';\r\nimport Arrows from './Arrows';\r\nimport '../styles/main.scss';\r\n\r\nclass Labyrinth extends Component {\r\n\tstate = {\r\n\t\tgameRange:3,\r\n\t\tmarkerPosition: null,\r\n\t\tpositions: [],\r\n\t\tclicked: false,\r\n\t\tendPosition: null,\r\n\t\tclickedCell: null\r\n\t}\r\n\r\n\tsetMarkerPosition =() => {\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\t...prevState, \r\n\t\t\tmarkerPosition: Math.floor(Math.random() * Math.pow(prevState.gameRange, 2) ),\r\n\t\t\tclicked: false,\r\n\t\t\tendPosition: null,\r\n\t\t\tclickedCell: null\r\n\t\t}));\r\n\t}\r\n\r\n\thandleClick = (index) => {\r\n\t\tif(this.state.clicked) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState((prevState) =>({\r\n\t\t\t...prevState,\r\n\t\t\tclicked: true,\r\n\t\t\tpositions: [],\r\n\t\t\tmarkerPosition: null,\r\n\t\t\tclickedCell: index,\r\n\t\t\tendPosition: prevState.positions[prevState.positions.length - 1].position\r\n\t\t}));\r\n\t}\r\n\r\n\tmoveArrow = (start, range, counter, res = []) => {\r\n\t\tlet currentPosition = start;\r\n\r\n\t\tif (counter < Math.pow(range, 2) + 1) {\r\n\t\t\tlet directions;\r\n\t\t\tswitch (true) {\r\n\t\t\t\tcase start === 0: \r\n\t\t\t\t\tdirections = [\"down\", \"right\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase start < range -1:\r\n\t\t\t\t\tdirections = [\"down\", \"left\", \"right\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase start === range -1:\r\n\t\t\t\t\tdirections = [\"down\", \"left\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase start === Math.pow(range, 2) - 1:\r\n\t\t\t\t\tdirections = [\"up\", \"left\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase firstColumnIndexes(range).includes(start):\r\n\t\t\t\t\tdirections= [\"up\", \"down\", \"right\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase lastColumnIndexes(range).includes(start):\r\n\t\t\t\t\tdirections= [\"up\", \"down\", \"left\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase start === Math.pow(range, 2) - range:\r\n\t\t\t\t\tdirections = [\"up\", \"right\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase start >  Math.pow(range, 2) - range:\r\n\t\t\t\t\tdirections = [\"up\", \"right\", \"left\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: directions = [\"up\", \"down\", \"left\", \"right\"];\r\n\t\t\t}\r\n\t\t\tconst direction = getDirection(directions);\r\n\t\t\tswitch (direction) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tcurrentPosition -= 1;\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tcurrentPosition += 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"up\":\r\n\t\t\t\t\tcurrentPosition -= range;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tcurrentPosition +=range;\r\n\t\t\t}\r\n\t\t\tres.push({direction, position: currentPosition});\r\n\t\t\t// console.log(direction, currentPosition)\r\n\t\t\t\treturn this.moveArrow(currentPosition, range, counter+1, res);\r\n\t\t} else {\r\n\t\t\treturn res;\r\n\t\t}\r\n\t}\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\r\n\t\tif (prevState.positions.length === 0 && prevState.positions === this.state.positions) {\r\n\t\t\tthis.setState((prevState) => ({\r\n\t\t\t\t...prevState, \r\n\t\t\t\tpositions: [...this.moveArrow(this.state.markerPosition, this.state.gameRange, 0)],\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { positions, gameRange} = this.state;\r\n\t\tconst cells = Array(Math.pow(gameRange, 2)).fill(null);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Field \r\n\t\t\t\t\tcells={cells}\r\n\t\t\t\t\tonClick = {this.handleClick}\r\n\t\t\t\t\t{...this.state}\r\n\t\t\t\t/>\r\n\t\t\t\t<button onClick={this.setMarkerPosition}>start game</button>\r\n\t\t\t\t<Arrows arrows={[...cells, null]} positions={positions}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nconst firstColumnIndexes = (range) => {\r\n\treturn Array.from({length: Math.pow(range, 2)}, (v, i) => i).filter(item => (item) % range === 0 && item < Math.pow(range, 2) - range && item > range - 1);\r\n};\r\nconst lastColumnIndexes = (range) => {\r\n\treturn Array.from({length: Math.pow(range, 2)}, (v, i) => i).filter(item => (item + 1 - range ) % range === 0 && item < Math.pow(range, 2) && item > range - 1);\r\n}\r\nconst getDirection = (ar) => {\r\n\t\tconst index = Math.floor(Math.random() * ar.length);\r\n\t\treturn ar[index];\r\n\t} \r\n\r\nexport default Labyrinth;","import React from 'react';\nimport Labyrinth from './components/Labyrinth';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Labyrinth/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}