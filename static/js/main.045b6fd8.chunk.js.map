{"version":3,"sources":["components/Field.js","components/Arrows.js","utils/helpers.js","components/Controls.js","components/Labyrinth.js","App.js","serviceWorker.js","index.js"],"names":["Field","props","cells","markerPosition","onClick","endPosition","clickedCellIndex","gameRange","react_default","a","createElement","className","map","cell","index","cn","concat","correct","incorrect","key","Arrows","arrows","positions","onTransitionEnd","arrow","Object","defineProperty","arrow-down","length","direction","arrow-left","arrow-up","arrow-right","firstColumnIndexes","range","Array","from","Math","pow","v","i","filter","item","lastColumnIndexes","getDirection","ar","floor","random","customStyles","control","styles","_ref","isDisabled","objectSpread","backgroundColor","borderColor","width","outline","color","option","_ref2","data","isFocused","isSelected","cursor",":active","input","dropdownIndicator","placeholder","singleValue","menuList","Controls","dropdownOption","onDropdownChange","currentGameRange","transitionsCounter","isFieldClicked","disabled","react_select_browser_esm","value","onChange","options","label","defaultValue","hideSelectedOptions","Labyrinth","state","gameRanges","setMarkerPosition","_callee","regenerator_default","wrap","_context","prev","next","_this","setState","moveArrow","position","stop","setGameRange","_callee2","_context2","handleClick","start","counter","res","arguments","undefined","currentPosition","directions","Helpers","includes","push","handleTr","_this$state","this","fill","components_Controls","components_Field","assign","components_Arrows","toConsumableArray","Component","App","components_Labyrinth","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.045b6fd8.chunk.js","sourcesContent":["import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nconst Field = (props) => {\r\n\tconst {cells, markerPosition, onClick, endPosition, clickedCellIndex, gameRange} = props;\r\n\r\n\treturn (\r\n\t\t<div className=\"field\">\r\n\t\t\t{cells.map((cell, index) => (\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName={cn(\"cell\", `cell-${gameRange}`, {\"correct\": index === endPosition && clickedCellIndex !== null, \"incorrect\" : clickedCellIndex === index && clickedCellIndex !== endPosition})} \r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\tonClick={() => onClick(index)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{markerPosition === index && <div className=\"marker\"></div>}\r\n\t\t\t\t</div>))\r\n\t\t\t}\r\n\t\t\t\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default Field;","import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nconst Arrows = (props) => {\r\n\tconst { arrows, positions, onTransitionEnd} = props;\r\n\r\n\treturn (\r\n\t\t<div className=\"arrows\" >\r\n\t\t\t{arrows.map((arrow, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tclassName={cn(\"arrow\", {\r\n\t\t\t\t\t\t\t\"arrow-down\" : positions.length && positions[index].direction === \"down\",\r\n\t\t\t\t\t\t\t\"arrow-left\" : positions.length && positions[index].direction === \"left\",\r\n\t\t\t\t\t\t\t\"arrow-up\" : positions.length && positions[index].direction === \"up\",\r\n\t\t\t\t\t\t\t\"arrow-right\" : positions.length && positions[index].direction === \"right\",\r\n\t\t\t\t\t\t\t[`arrow-${index }`] : true\r\n\t\t\t\t\t\t\t})} \r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tonTransitionEnd={onTransitionEnd}></div>)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Arrows;","export const firstColumnIndexes = (range) => {\r\n\treturn Array.from({length: Math.pow(range, 2)}, (v, i) => i).filter(item => (item) % range === 0 && item < Math.pow(range, 2) - range && item > range - 1);\r\n};\r\nexport const lastColumnIndexes = (range) => {\r\n\treturn Array.from({length: Math.pow(range, 2)}, (v, i) => i).filter(item => (item + 1 - range ) % range === 0 && item < Math.pow(range, 2) && item > range - 1);\r\n}\r\nexport const getDirection = (ar) => {\r\n\t\tconst index = Math.floor(Math.random() * ar.length);\r\n\t\treturn ar[index];\r\n\t} \r\n\r\nexport const getDropdownOptions = (ar) => ar.map(item => ({label: `${item}`, value: `${item}`}));","import React from 'react';\r\nimport Select from 'react-select';\r\nimport { getDropdownOptions } from '../utils/helpers';\r\n\r\nconst customStyles = {\r\n\tcontrol: (styles, {isDisabled}) => ({ ...styles, backgroundColor: 'white', borderColor: isDisabled ? \"#808080\" : \"#8145d3\", width: \"250px\" , outline: \"none\", color:\"#c945d3\" }),\r\n\toption: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n\t\treturn {\r\n\t\t\t...styles,\r\n\t\t\tbackgroundColor: isDisabled\r\n\t\t\t? null\r\n\t\t\t: isSelected\r\n\t\t\t? data.color\r\n\t\t\t: isFocused\r\n\t\t\t? \"#f1eafa\"\r\n\t\t\t: null,\r\n\t\t\tcolor: isDisabled\r\n\t\t\t? '#ccc'\r\n\t\t\t: isSelected\r\n\t\t\t? data.color\r\n\t\t\t: null,\r\n\t\t\tcursor: isDisabled ? 'not-allowed' : 'default',\r\n\r\n\t\t\t':active': {\r\n\t\t\t...styles[':active'],\r\n\t\t\tbackgroundColor: !isDisabled && (isSelected ? data.color : \"#8145d3\"),\r\n\t\t\t},\r\n\t\t};\r\n\t},\r\n\tinput: styles => ({ ...styles, borderColor: \"#8145d3\"}),\r\n\tdropdownIndicator: styles => ({...styles, color: \"#8145d3\"}),\r\n\tplaceholder: styles => ({ ...styles }),\r\n\tsingleValue: (styles, ) => ({ ...styles, color: \"#c945d3\"}),\r\n\tmenuList: styles => ({...styles, borderColor: \"#c945d3\"})\r\n};\r\n\r\nconst Controls = (props) => {\r\n\tconst { onClick, dropdownOption, onDropdownChange, currentGameRange, transitionsCounter, gameRange, isFieldClicked, markerPosition} = props;\r\n\r\n\treturn (\r\n\t\t<div className=\"controls\">\r\n\t\t\t<button \r\n\t\t\t\tonClick={onClick}\r\n\t\t\t\tdisabled = {markerPosition && transitionsCounter < gameRange ? true : false}\r\n\t\t\t>\r\n\t\t\t\tstart game\r\n\t\t\t</button>\r\n\t\t\t<Select\r\n\t\t\t\tvalue={currentGameRange}\r\n\t\t\t\tonChange={onDropdownChange}\r\n\t\t\t\toptions={getDropdownOptions(dropdownOption)}\r\n\t\t\t\tstyles={customStyles}\r\n\t\t\t\tplaceholder =\"Choose the game range\"\r\n\t\t\t\tdefaultValue = {currentGameRange}\r\n\t\t\t\thideSelectedOptions = {false}\r\n\t\t\t\tisDisabled = { markerPosition && (transitionsCounter < gameRange || !isFieldClicked )? true : false }\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Controls;\r\n\r\n","import React, {Component} from 'react';\r\nimport Field from './Field';\r\nimport Arrows from './Arrows';\r\nimport Controls from './Controls';\r\nimport * as Helpers from '../utils/helpers';\r\nimport '../styles/main.scss';\r\n\r\nclass Labyrinth extends Component {\r\n\tstate = {\r\n\t\tgameRanges: [3, 4, 5],\r\n\t\tgameRange:3,\r\n\t\tmarkerPosition: null,\r\n\t\tpositions: [],\r\n\t\tendPosition: null,\r\n\t\tclickedCellIndex: null\r\n\t}\r\n\r\n\tsetMarkerPosition = async () => {\r\n\t\tawait this.setState({\r\n\t\t\tmarkerPosition: Math.floor(Math.random() * Math.pow(this.state.gameRange, 2) ),\r\n\t\t\tendPosition: null,\r\n\t\t\tclickedCellIndex: null,\r\n\t\t\tpositions: [],\r\n\t\t\ttransitionsCounter: 0\r\n\t\t});\r\n\r\n\t\tconst positions = this.moveArrow(this.state.markerPosition, this.state.gameRange, 0);\r\n\r\n\t\tthis.setState({\r\n\t\t\tpositions: positions,\r\n\t\t\tendPosition: positions[positions.length - 1].position\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tsetGameRange = async ({value}) => {\r\n\r\n\t\tawait this.setState({\r\n\t\t\tgameRange: +value,\r\n\t\t\tendPosition: null,\r\n\t\t\tclickedCellIndex: null,\r\n\t\t\tmarkerPosition: null,\r\n\t\t\ttransitionsCounter: 0\r\n\t\t});\r\n\t}\r\n\r\n\thandleClick = (index) => {\r\n\t\tif(!this.state.markerPosition || this.state.transitionsCounter < Math.pow(this.state.gameRange, 2) + 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tpositions: [],\r\n\t\t\tmarkerPosition: null,\r\n\t\t\tclickedCellIndex: index,\r\n\t\t});\r\n\t}\r\n\r\n\tmoveArrow = (start, range, counter, res = []) => {\r\n\t\tlet currentPosition = start;\r\n\r\n\t\tif (counter < Math.pow(range, 2) + 1) {\r\n\t\t\tlet directions;\r\n\t\t\tswitch (true) {\r\n\t\t\t\tcase start === 0: \r\n\t\t\t\t\tdirections = [\"down\", \"right\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase start < range -1:\r\n\t\t\t\t\tdirections = [\"down\", \"left\", \"right\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase start === range -1:\r\n\t\t\t\t\tdirections = [\"down\", \"left\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase start === Math.pow(range, 2) - 1:\r\n\t\t\t\t\tdirections = [\"up\", \"left\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Helpers.firstColumnIndexes(range).includes(start):\r\n\t\t\t\t\tdirections= [\"up\", \"down\", \"right\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase Helpers.lastColumnIndexes(range).includes(start):\r\n\t\t\t\t\tdirections= [\"up\", \"down\", \"left\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase start === Math.pow(range, 2) - range:\r\n\t\t\t\t\tdirections = [\"up\", \"right\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase start >  Math.pow(range, 2) - range:\r\n\t\t\t\t\tdirections = [\"up\", \"right\", \"left\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: directions = [\"up\", \"down\", \"left\", \"right\"];\r\n\t\t\t}\r\n\t\t\tconst direction = Helpers.getDirection(directions);\r\n\t\t\tswitch (direction) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tcurrentPosition -= 1;\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tcurrentPosition += 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"up\":\r\n\t\t\t\t\tcurrentPosition -= range;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tcurrentPosition +=range;\r\n\t\t\t}\r\n\t\t\tres.push({direction, position: currentPosition});\r\n\t\t\t// console.log(direction, currentPosition)\r\n\t\t\t\treturn this.moveArrow(currentPosition, range, counter+1, res);\r\n\t\t} else {\r\n\t\t\treturn res;\r\n\t\t}\r\n\t}\r\n\r\n\thandleTr = () => {\r\n\r\n\t\tthis.setState({\r\n\t\t\ttransitionsCounter: this.state.transitionsCounter + 1\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { positions, gameRange, transitionsCounter, gameRanges, clickedCellIndex, markerPosition} = this.state;\r\n\t\tconst cells =Array(Math.pow(gameRange, 2)).fill(null);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Controls \r\n\t\t\t\t\tonClick={this.setMarkerPosition}\r\n\t\t\t\t\tdropdownOption = { gameRanges }\r\n\t\t\t\t\tonDropdownChange = {this.setGameRange}\r\n\t\t\t\t\tcurrentGameRange = {this.state.gameRange}\r\n\t\t\t\t\ttransitionsCounter = {transitionsCounter}\r\n\t\t\t\t\tgameRange = { Math.pow(gameRange, 2) + 1}\r\n\t\t\t\t\tisFieldClicked = { clickedCellIndex === null ? false : true }\r\n\t\t\t\t\tmarkerPosition = {markerPosition}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<Field \r\n\t\t\t\t\tcells={cells}\r\n\t\t\t\t\tonClick = {this.handleClick}\r\n\t\t\t\t\t{...this.state}\r\n\t\t\t\t/>\r\n\t\t\t\t<Arrows\r\n\t\t\t\t\tarrows={[...cells, null]} \r\n\t\t\t\t\tpositions={positions} \r\n\t\t\t\t\tonTransitionEnd = {this.handleTr}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Labyrinth;","import React from 'react';\nimport Labyrinth from './components/Labyrinth';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Labyrinth/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}